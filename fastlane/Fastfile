# update_fastlane

default_platform(:android)

platform :android do

  desc "Common setup for all lanes"
  before_all do |lane, options|
    ENV["SLACK_URL"] = "SLACK URL"
  end

  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do
    gradle(task: "clean assembleRelease")
    crashlytics
  
    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "clean assembleRelease")
    upload_to_play_store
  end

  desc "Upload the APK to Slack channel"
  private_lane :upload_to_slack do |options|
    file_path = lane_context[SharedValues::GRADLE_APK_OUTPUT_PATH]
    file_name = file_path.gsub(/\/.*\//,"")
    access_token = "SLACK LEGACY TOKEN"
    channel_name = "CHANNEL NAME"
    sh "echo Uploading " + file_name + " to Slack"
    sh "curl https://slack.com/api/files.upload -F token=\"" + access_token + "\"  -F channels=\"" + channel_name + "\" -F title=\"" + file_name + "\" -F filename=\"" + file_name + "\" -F file=@" + file_path
  end

  lane :slackbuild do
    gradle(task: "assembleRelease")
    slack(message: "Build Successful!")
    upload_to_slack()
  end

   after_all do |lane|
     file_name = lane_context[SharedValues::GRADLE_APK_OUTPUT_PATH].gsub(/\/.*\//,"")
     slack(
       message: "Successfully deployed new NairobiJavaGeeks app apk.",
       default_payloads: [
         :git_branch,
         :last_git_commit_hash,
         :last_git_commit_message
       ],
       payload: {
         # Optional, lets you specify any number of your own Slack attachments.
         "Build Date" => Time.new.to_s,
         "APK" => file_name
       },
       success: true
     )
   end

end
